(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{355:function(t,a,s){t.exports=s.p+"assets/img/image-20201223172018767.81d9bd98.png"},356:function(t,a,s){t.exports=s.p+"assets/img/image-20201223170740228.b6bdc5c7.png"},357:function(t,a,s){t.exports=s.p+"assets/img/image-20201224090737380.abb6a23f.png"},358:function(t,a,s){t.exports=s.p+"assets/img/image-20201223171630177.b48a6cdf.png"},359:function(t,a,s){t.exports=s.p+"assets/img/image-20201223180208367.da542055.png"},360:function(t,a,s){t.exports=s.p+"assets/img/image-20201223180225774.917150e8.png"},361:function(t,a,s){t.exports=s.p+"assets/img/image-20201224095802675.1a81f69a.png"},362:function(t,a,s){t.exports=s.p+"assets/img/image-20201224111814067.a0a5c197.png"},363:function(t,a,s){t.exports=s.p+"assets/img/image-20201224111913223.4f57e53a.png"},364:function(t,a,s){t.exports=s.p+"assets/img/image-20201224133015639.d126850a.png"},365:function(t,a,s){t.exports=s.p+"assets/img/image-20201224135216280.855238cd.png"},366:function(t,a,s){t.exports=s.p+"assets/img/image-20201224144203798.9a1ffbae.png"},367:function(t,a,s){t.exports=s.p+"assets/img/image-20201224154540973.95622f0d.png"},368:function(t,a,s){t.exports=s.p+"assets/img/image-20201224172151410.5ba3ab38.png"},369:function(t,a,s){t.exports=s.p+"assets/img/image-20201224155513922.9d8c2748.png"},398:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"探寻下webpack的打包的模块化机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#探寻下webpack的打包的模块化机制"}},[t._v("#")]),t._v(" 探寻下Webpack的打包的模块化机制")]),t._v(" "),e("p",[t._v("一直都不是很了解webpack的模块化原理，所以花时间看下。")]),t._v(" "),e("h2",{attrs:{id:"环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境"}},[t._v("#")]),t._v(" 环境")]),t._v(" "),e("p",[t._v("4.44.1")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"webpack"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^4.44.1"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"webpack-cli"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^3.3.12"')]),t._v("\n")])])]),e("p",[t._v("为了更好的阅读代码，打包模式"),e("code",[t._v("mode")]),t._v("设置为了"),e("code",[t._v("none")])]),t._v(" "),e("h2",{attrs:{id:"同步模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步模块"}},[t._v("#")]),t._v(" 同步模块")]),t._v(" "),e("h3",{attrs:{id:"文件准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件准备"}},[t._v("#")]),t._v(" 文件准备")]),t._v(" "),e("ul",[e("li",[t._v("Index.js 也是我们的入口文件")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" text "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[t._v("a.js 导入的模块文件")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("代码很简单，就是入口文件导入a文件的变量，在放到body上")]),t._v(" "),e("h3",{attrs:{id:"打包结果分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包结果分析"}},[t._v("#")]),t._v(" 打包结果分析")]),t._v(" "),e("img",{staticStyle:{zoom:"40%"},attrs:{src:s(355),alt:"image-20201223172018767"}}),t._v(" "),e("p",[t._v("可以看到，打包出来的文件，实际上是一个自执行函数，入参是两个"),e("code",[t._v("function")]),t._v("组成的数组"),e("code",[t._v("modules")]),t._v("，我称之为模块数组，第一个函数实际上就是"),e("code",[t._v("index.js")]),t._v("，第二个函数是"),e("code",[t._v("a.js")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(356),alt:"image-20201223170740228"}})]),t._v(" "),e("p",[t._v("接着，进入函数内部，初始化了一个对象变量，这是用来存储加载完毕的模块")]),t._v(" "),e("img",{attrs:{src:s(357),alt:"image-20201224090737380"}}),t._v(" "),e("p",[t._v("进入函数内部，我们看到，基本上全是函数的定义，真正执行的只有最后一行，调用了"),e("code",[t._v("__webpack_require__")]),t._v("函数传递了参数0，同时将"),e("code",[t._v("__webpack_require__.s")]),t._v("赋值为了0")]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:s(358),alt:"image-20201223171630177"}}),t._v(" "),e("p",[e("code",[t._v("__webpack_require__")]),t._v("函数，从名字中可以看出，这就是一个模块的加载函数。函数首先判断了模块是否被加载到"),e("code",[t._v("installedModules")]),t._v("中。如果没有被加载过，则新创建一个空的"),e("code",[t._v("module")]),t._v("，分别有id、是否加载过标识以及空的exports组成。然后执行模块数组中modules中对应id的函数，将刚才创建的"),e("code",[t._v("module")]),t._v("以及"),e("code",[t._v("__webpack_require__")]),t._v("函数创建去，返回module的export。"),e("strong",[t._v("第一次执行，加载的是"),e("code",[t._v("modules[0]")]),t._v("，即模块数组中的第0个，入口模块index。")])]),t._v(" "),e("blockquote",[e("p",[t._v("上面在加载模块的时候，通过"),e("code",[t._v("modules[moduleId].call(module.exports, module, module.exports, __webpack_require__)")]),t._v("执行了对应的模块函数，我们在回头看下模块函数里做了哪些事")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(359),alt:"image-20201223180208367"}})]),t._v(" "),e("p",[t._v("模块函数的执行，就是执行对应js中的代码，如果有代码里有"),e("code",[t._v("export.default")]),t._v("的，就会给对应的"),e("code",[t._v("module.exports")]),t._v("对象中添加"),e("code",[t._v("default")]),t._v("属性，如果有"),e("code",[t._v("exprot")]),t._v("的，就会给"),e("code",[t._v("module.exports")]),t._v("对象中添加对应导出的属性。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(360),alt:"image-20201223180225774"}})]),t._v(" "),e("p",[t._v("看下模函数中用到的webpack_require.r函数，就是给exports属性添加一个"),e("code",[t._v("Module")]),t._v("或"),e("code",[t._v("__esModule")]),t._v("标识。"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("Symbol.toStringTag")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("这就是webpack打包出来的主要内容和运行方式。还有些工具方法这里就不细说了。")]),t._v(" "),e("h2",{attrs:{id:"异步模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步模块"}},[t._v("#")]),t._v(" 异步模块")]),t._v(" "),e("p",[t._v("异步加载也一样，我们照例准备好文件")]),t._v(" "),e("h3",{attrs:{id:"文件准备-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件准备-2"}},[t._v("#")]),t._v(" 文件准备")]),t._v(" "),e("ul",[e("li",[t._v("index.js 入口文件")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" div "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  div"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[t._v("b.js 用于被异步加载的文件")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("img",{staticStyle:{zoom:"50%"},attrs:{src:s(361),alt:"image-20201224095802675"}}),t._v(" "),e("p",[t._v("可以看到，这次打包出来的文件就不止一个了。")]),t._v(" "),e("h3",{attrs:{id:"打包结果分析-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包结果分析-2"}},[t._v("#")]),t._v(" 打包结果分析")]),t._v(" "),e("p",[e("img",{attrs:{src:s(362),alt:"image-20201224111814067"}})]),t._v(" "),e("p",[t._v("通过chrome的debug，我们可以看到，刨除各种各样的赋值，初始化变量以及函数等操作，这次webpack的执行函数里多了这段代码。这段大致的逻辑就是将"),e("code",[t._v("window.webpackJsonp")]),t._v("初始化为一个数组，然后将其原本的"),e("code",[t._v("push")]),t._v("方法赋值给"),e("code",[t._v("parentJsonpFunction")]),t._v("变量，并且将"),e("code",[t._v("window.webpackJsonp")]),t._v("的push字段修改为"),e("code",[t._v("webpackJsonpCallback")]),t._v("这个函数。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(363),alt:"image-20201224111913223"}})]),t._v(" "),e("p",[t._v("接着，入口模块执行"),e("code",[t._v("__webpack_require__.e")]),t._v("，参数为1，进行b模块的导入")]),t._v(" "),e("p",[e("img",{attrs:{src:s(364),alt:"image-20201224133015639"}})]),t._v(" "),e("p",[e("code",[t._v("__webpack_require__.e")]),t._v("函数内部，我们可以看到，它先从"),e("code",[t._v("installedChunks")]),t._v("这个对象里去取chunkId的值，而chunkId就是入口模块传递过来的1。并且返回的结果如果为0，代表已经安装过了，直接"),e("code",[t._v("return")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(365),alt:"image-20201224135216280"}})]),t._v(" "),e("p",[t._v("接下来就是创建一个promise，创建一个script标签，根据chunkId找到对应的模块路径。实际上就是通过script标签进行模块的加载与执行。"),e("code",[t._v("onScriptComplete")]),t._v("是错误处理函数")]),t._v(" "),e("blockquote",[e("p",[t._v("由于我的代码比较简单，只剩下import之后的逻辑，所有入口模块到这里就只剩下了导入文件之后的回调了，那么现在来看下"),e("code",[t._v("1.main.js")]),t._v("里有哪些内容")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(366),alt:"image-20201224144203798"}})]),t._v(" "),e("p",[t._v("大家应该还记得"),e("code",[t._v("window.webpackJsonp")]),t._v("这个数组的"),e("code",[t._v("push")]),t._v("方法，实际上已经被改成了"),e("code",[t._v("webpackJsonpCallback")]),t._v("这个函数了，所以这里实际就是在执行"),e("code",[t._v("webpackJsonpCallback")]),t._v("，同时传递了一个数组，第一个是id数组，第二个就是模块函数，和前面讲的模块函数一样。")]),t._v(" "),e("blockquote",[e("p",[t._v("如果这里先于webpack更改push方法之前执行，这里的push就是正常的添加item方法，会将内容放到数组中，而webpack在对"),e("code",[t._v("window.webpackJsonp")]),t._v("进行装饰过后，会遍历当前数组的内容，分别执行"),e("code",[t._v("webpackJsonpCallback")])])]),t._v(" "),e("p",[e("img",{attrs:{src:s(367),alt:"image-20201224154540973"}})]),t._v(" "),e("p",[t._v("模块加载完毕了，执行回调。这里的逻辑主要就是解析模块，将模块函数存储到"),e("code",[t._v("modules")]),t._v("这个模块数组上，并且标记该模块已经被安装，然后执行加载该模块钱创建的"),e("code",[t._v("promise")]),t._v("的"),e("code",[t._v("resolve")]),t._v("方法。")]),t._v(" "),e("blockquote",[e("p",[t._v("⚠️ 注意，chunkId和moduleId分别是异步安装的模块id和存入modules数组的模块id。")]),t._v(" "),e("p",[t._v("moduleId为1时，webpack是直接将其存储到一个数组里， 下标是1。如果不是1，则存储到对象了，key就是id")]),t._v(" "),e("p",[e("img",{attrs:{src:s(368),alt:"image-20201224172151410"}})])]),t._v(" "),e("p",[e("img",{attrs:{src:s(369),alt:"image-20201224155513922"}})]),t._v(" "),e("p",[e("code",[t._v("resolve")]),t._v("执行，触发"),e("code",[t._v("then")]),t._v("函数，调用"),e("code",[t._v("__webpack_require__")]),t._v("调用id为1的模块，也就是我们刚刚导入的模块 b.js。接着就和同步一样了，导入完模块，执行我们的代码。")]),t._v(" "),e("p",[t._v("到这里，模块加载就执行完毕了。")])])}),[],!1,null,null,null);a.default=r.exports}}]);